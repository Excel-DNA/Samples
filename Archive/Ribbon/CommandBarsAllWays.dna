<DnaLibrary RuntimeVersion="v4.0" Name="CommandBar Wrapper Tests">
  <Reference Name="System.Windows.Forms" />
  <Reference Name="System.Drawing" />
   <![CDATA[
   Imports System.Drawing
   Imports System.Windows.Forms
   Imports System.IO
   Imports ExcelDna.Integration.CustomUI
   
  Public Class MyAddIn 
    Implements IExcelAddIn
    
    Private myMenuToDelete As CommandBarPopup

  	Public Sub AutoOpen() Implements IExcelAddIn.AutoOpen
        ' MessageBox.Show("Starting up")
        Dim bars As CommandBars = ExcelCommandBarUtil.GetCommandBars()
        Dim menuBar As CommandBar = bars("Worksheet Menu Bar")
      
        Dim parent As CommandBarPopup = menuBar.Controls.AddPopup("Test Menu")
        parent.Caption = "Menu from code"
        Dim myButton As CommandBarButton = parent.Controls.AddButton()
        myButton.Caption = "Press Me"
        myButton.Style = MsoButtonStyle.msoButtonCaption
        myButton.OnAction = "MyFirstClickHandler"

        Dim myOtherButton As CommandBarButton = parent.Controls.AddButton()
        myOtherButton.Caption = "Dont Press Me"
        myOtherButton.Style = MsoButtonStyle.msoButtonIconAndCaption
        myOtherButton.FaceId = 1122
        myOtherButton.OnAction = "MySecondClickHandler"
        
        myMenuToDelete = parent

        LoadMenuFromString()

    End Sub
    
    Public Sub AutoClose() Implements IExcelAddIn.AutoClose
        'MessageBox.Show("Closing down")
        myMenuToDelete.Delete(True)
        UnloadMenus()
    End Sub

    Public Shared Sub MyFirstClickHandler()
        MessageBox.Show("Thanks")
    End Sub

    Public Shared Sub MySecondClickHandler()
        MessageBox.Show("Aaaaarrrgggghhhhh")
    End Sub

    Public Sub LoadMenuFromString()
            ExcelCommandBarUtil.LoadCommandBars( _
"<commandBars xmlns='http://schemas.excel-dna.net/office/2003/01/commandbars' >" + _
"    <commandBar name='Worksheet Menu Bar'>" + _
"        <popup caption='Menu from String' height='25'  >" + _
"          <button caption='Say Hello' onAction='MySecondClickHandler' image='M' beginGroup='true'></button>" + _
"        </popup>" + _
"      </commandBar>" + _
"</commandBars>", AddressOf FindMyBitmap)
    End Sub

    Public Sub UnloadMenus()
      ExcelCommandBarUtil.UnloadCommandBars()
    End Sub
    
    Public Function FindMyBitMap(name As String) As Bitmap
      'MessageBox.Show("Getting Bitmap " & name)
      Dim xllPath As String = CStr(XlCall.Excel(XlCall.xlGetName))
      Dim bitmapPath As String = Path.Combine(Path.GetDirectoryName(xllPath), "m.png")
      Dim bitmap As Bitmap = New Bitmap(bitmapPath)
      Return bitMap
    End Function
  
End Class

  Public Module Module1
    Function AddThem(x, y)
	AddThem = x + y
    End Function	

    Sub ShowHelloMessage
	MsgBox("Hello There!",,"ExcelDna CommandBars!")
    End Sub
  End Module

]]>
  <!-- Some images that can be used in the Ribbon ui -->
  <Image Name="M" Path="M.png" Pack="true" />
  
  <CustomUI>
    <!-- CommandBars Fallback for Excel version pre-2007, interpreted by ExcelDna (I just made up the namespace for future versioning) -->
    <commandBars xmlns='http://schemas.excel-dna.net/office/2003/01/commandbars' >
      <commandBar name='Worksheet Menu Bar'>
        <!-- Here we add a top-level menu to the main Excel Worksheet menu -->
        <popup caption='Menu from XML' height='19'  >
          <button caption='Say Hello' onAction='ShowHelloMessage' image='M' beginGroup='true'></button>
          <button caption='Another Item...' enabled='false' tooltipText='In the tooltip?' />
          <popup caption='My sub-menu' >
            <button helpFile='xyz.hlp' faceId='123' helpContextId='134' caption='SubMenu Button' onAction='ShowHelloMessage'/>
          </popup>
        </popup>
      </commandBar>
      <commandBar name='Cell'>
        <!-- Here we add a menu to the Excel context menu -->
        <button caption='New context item' enabled='true' shortcutText='CTRL+A' onAction="ShowHelloMessage"/>
      </commandBar>
    </commandBars>
  </CustomUI>
</DnaLibrary>
